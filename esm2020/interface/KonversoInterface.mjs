/***********************************************************
 **  @project ngx-konverso                              **
 **  @file KonversoInterface                                         **
 **  @author Brice Daupiard <brice.daupiard@smartiiz.com>  **
 **  @Date 30/03/2021                                         **
 ***********************************************************/
export {};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiS29udmVyc29JbnRlcmZhY2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9rb252ZXJzby9zcmMvaW50ZXJmYWNlL0tvbnZlcnNvSW50ZXJmYWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs2REFLNkQiLCJzb3VyY2VzQ29udGVudCI6WyIvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcbiAqKiAgQHByb2plY3Qgbmd4LWtvbnZlcnNvICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKipcbiAqKiAgQGZpbGUgS29udmVyc29JbnRlcmZhY2UgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICoqXG4gKiogIEBhdXRob3IgQnJpY2UgRGF1cGlhcmQgPGJyaWNlLmRhdXBpYXJkQHNtYXJ0aWl6LmNvbT4gICoqXG4gKiogIEBEYXRlIDMwLzAzLzIwMjEgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICoqXG4gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG5cblxuaW50ZXJmYWNlIFdpbGRDYXJkT2JqZWN0QXJyYXkge1xuICAgIFtpbmRleDogc3RyaW5nXTogYW55W107IC8vIGtleSBzaG91bGQgYmUgbGFuZ3VhZ2Ugc2V0dGluZ1xufVxuXG4vKipcbiAqICBCb3QgSW5pdCBtZXNzYWdlXG4gKiAgQEZpcnN0VXNhZ2UgeyBlbiA6IFtcbiAqICAgICAgICAgICdIZWxsbyBpbSBCb3RtYW4gaSBjYW4gaGVscCB5b3UnLFxuICogICAgICAgICAgJ1lvdSBjYW4gYXNrIG1lIGFueXRoaW5nJyxcbiAqICAgICAgICAgICdGb3IgZXhhbXBsZSA6IEkgaGF2ZSBhIHByb2JsZW0gd2l0aCBteSBwbGFudHMnXG4gKiAgICAgICAgIF0sXG4gKiAgICBmciA6IFtcbiAqICAgICAgICAnQm9uam91ciBqZSBzdWlzIGJvdG1hbicsXG4gKiAgICAgICAgJ1R1IHBldXggbWUgZGVtYW5kZXIgY2UgcXVlIHR1IHZldXgnLFxuICogICAgICAgICdQYXIgZXhlbXBsZSA6IG1lcyBwbGFudGVzIG9udCB1biBwcm9ibMOobWUnXG4gKiAgICAgICAgXVxuICogIH07IEZpcnN0IG1lc3NhZ2UgKHR5cGUgc3RlcHBlcilcbiAqXG4gKiAgQFdlbGNvbWUgIHtcbiAqICAgICAgZW4gOiAnSGkgSmVhbiwgaW0gZ2xhZCB0byBzZWUgeW91LCB3aGF0IGNhbiBpIGRvIGZvciB5b3UgPycsXG4gKiAgICAgIGZyIDogJ0JvbmpvdXIsIHJhdmlzIGRlIHRlIHJldm9pciwgcXVlIHB1aXMtamUgZmFpcmUgcG91ciB0b2knXG4gKiAgICB9IFdlbGNvbWUgbWVzc2FnZSBzaW1wbGUgc3RyaW5nXG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgQm90SW5pdE1lc3NhZ2Uge1xuICAgIEZpcnN0VXNhZ2U/OiBXaWxkQ2FyZE9iamVjdEFycmF5O1xuICAgIFdlbGNvbWU/OiBXaWxkQ2FyZE9iamVjdDtcbn1cblxuXG5leHBvcnQgaW50ZXJmYWNlIENvbG9yU2V0IHtcbiAgICBQcmltYXJ5Pzogc3RyaW5nO1xuICAgIFNlY29uZGFyeT86IHN0cmluZztcbiAgICBEZWZhdWx0Pzogc3RyaW5nO1xufVxuXG4vKipcbiAqIERlZmF1bHQgQXNzZXRzXG4gKi9cblxuZXhwb3J0IGludGVyZmFjZSBEZWZhdWx0QXNzZXRzIHtcbiAgICBGdWxsU2l6ZUxvZ28/OiBzdHJpbmc7XG4gICAgU21hbGxTaXplTG9nbz86IHN0cmluZztcbiAgICBCYWNrZ3JvdW5kPzogc3RyaW5nO1xuICAgIENvbG9yU2V0PzogQ29sb3JTZXQ7XG59XG5cbi8qKlxuICogSW50ZXJmYWNlIHNldHRpbmcgZm9yUm9vdCBLb252ZXJzb1xuICovXG5leHBvcnQgaW50ZXJmYWNlIEtvbnZlcnNvSW50ZXJmYWNlIHtcbiAgICBlbmRwb2ludDogc3RyaW5nOyAgLy8gQXBpIEVudHJ5IGVuZHBvaW50IG9yIFByb3h5XG4gICAgdG9rZW4/OiBzdHJpbmc7IC8vIEJlYXJlciB0b2tlblxuICAgIGF1dGg/OiBib29sZWFuOyAvLyBXaWxsIGluamVjdCB1c2VyIGRhdGEgdG8gYm90IGNvbXBvbmVudCBvbiB1c2VyIHNpZ24gaW5cbiAgICBsYW5nPzogc3RyaW5nOyAvLyBjdXJyZW50bHkgYXZhaWxhYmxlIGxhbmd1YWdlIChjYW4gYmUgdXBkYXRlKSxcbiAgICBDdXN0b21XZWxjb21lPzogYm9vbGVhbjtcbiAgICBkZWZhdWx0QXNzZXRzPzogRGVmYXVsdEFzc2V0cztcbiAgICBCb3RJbml0TWVzc2FnZT86IEJvdEluaXRNZXNzYWdlO1xuICAgIEFzc2lzdGFudE1vZGU/OiBib29sZWFuO1xuICAgIElucHV0UGxhY2VIb2xkZXI6IFdpbGRDYXJkT2JqZWN0QXJyYXk7XG4gICAgSW5wdXROdW1iZXJQbGFjZUhvbGRlcjogV2lsZENhcmRPYmplY3RBcnJheTtcbiAgICBBZnRlclByb2Nlc3M6IGJvb2xlYW47XG4gICAgQWZ0ZXJQcm9jZXNzU2NlbmFyaW86IGFueTtcbiAgICBNb2RhbEF0dGFjaG1lbnRUZXh0Pzoge1xuICAgICAgICBmcjoge1xuICAgICAgICAgICAgU0VORF9NRV9ZT1VSX0FUVEFDSE1FTlRTOiBzdHJpbmcsXG4gICAgICAgICAgICBEUk9QX1BIT1RPOiBzdHJpbmcsXG4gICAgICAgICAgICBJX0ZJTklTSEVEOiBzdHJpbmdcbiAgICAgICAgfSxcbiAgICAgICAgZW46IHtcbiAgICAgICAgICAgIFNFTkRfTUVfWU9VUl9BVFRBQ0hNRU5UUzogc3RyaW5nLFxuICAgICAgICAgICAgRFJPUF9QSE9UTzogc3RyaW5nLFxuICAgICAgICAgICAgSV9GSU5JU0hFRDogc3RyaW5nXG4gICAgICAgIH1cbiAgICB9LFxufVxuXG4vKipcbiAqICBJbnRlZmFjZSBzZXR0aW5nIGZvciBhdXRoZW50aWNhdGlvblxuICogIEB1c2VySWQ6IHN0cmluZzsgIC8vIHVuaXF1ZSB1c2VyIElEIChhbnkgdHlwZSBvZiBmb3JtYXQgYWNjZXB0ZWQpXG4gKiAgQGxhbmc6IHN0cmluZzsgLy8gMiBkaWdpdHMgbGFuZ3VhZ2UgdXNlZCAobGlrZSBcImZyXCIsIFwiZW5cIiwgZXRjLilcbiAqICBAbG9jYXRpb24/OiBzdHJpbmc7IC8vIHNpbXBsZSBhZGRyZXNzIHN0cmluZ1xuICogIEBmaXJzdFZpc2l0Pzpib29sZWFuOyAvLyBlbmFibGUgZmlyc3QgdmlzaXRlIG1lc3NhZ2UgaWYgaXMgc2V0IHRvIHRydWVcbiAqICBAW2luZGV4OiBzdHJpbmddOiBzdHJpbmc7IC8vIEFsbCBvdGhlciBzdHVmZiBwdXQgaGVyZSBmb3IgYm90IGtub3dsZWRnZTtcbiAqL1xuZXhwb3J0IGludGVyZmFjZSBLb252ZXJzb1VzZXIge1xuICAgIHVzZXJJZDogc3RyaW5nO1xuICAgIGxhbmc6IHN0cmluZztcbiAgICBsb2NhdGlvbj86IHN0cmluZztcbiAgICBmaXJzdFZpc2l0PzogYW55O1xuXG4gICAgW2luZGV4OiBzdHJpbmddOiBhbnk7XG59XG5cblxuLyoqXG4gKiAgSW50ZWZhY2UgUXVlcnkgS29udmVyc29cbiAqL1xuXG5leHBvcnQgaW50ZXJmYWNlIEtvbnZlcnNvUXVlcnkge1xuICAgIHVzZXJJZDogc3RyaW5nO1xuICAgIGxhbmc6IHN0cmluZztcbiAgICBxdWVyeTogc3RyaW5nO1xuICAgIGlzU2VuZGluZzogdHJ1ZTtcblxuICAgIFtpbmRleDogc3RyaW5nXTogYW55O1xufVxuXG4vKipcbiAqICBPcGVuQ2hhdEJvdCBBbnN3ZXIgSW50ZXJmYWNlc1xuICogIFRoaXMgZm9sbG93aW5nIGludGVyZmFjZSBpcyBiYXNlZCBvbiBodHRwczovL29wZW5jaGF0Ym90LmlvL3N3YWdnZXIvc3dhZ2dlci5odG1sIy9kZWZhdWx0L2Fza19jaGF0Ym90XG4gKi9cbmludGVyZmFjZSBPcGVuQ2hhdEJvdENoYW5uZWxQYXlsb2FkIHtcbiAgICB0eXBlOiAoJ2h0bWwnIHwgJ3BsYWluVGV4dCcpO1xuICAgIHBheWxvYWQ6IHN0cmluZztcbn1cblxuaW50ZXJmYWNlIE9wZW5DaGF0Qm90Q2hhbm5lbCB7XG4gICAgbWFya3VwOiBPcGVuQ2hhdEJvdENoYW5uZWxQYXlsb2FkO1xuICAgIG1lc3NhZ2luZzogT3BlbkNoYXRCb3RDaGFubmVsUGF5bG9hZDtcbiAgICBzbXM6IE9wZW5DaGF0Qm90Q2hhbm5lbFBheWxvYWQ7XG4gICAgdHRzOiBPcGVuQ2hhdEJvdENoYW5uZWxQYXlsb2FkO1xufVxuXG5pbnRlcmZhY2UgT3BlbkNoYXRCb3RBY3Rpb24ge1xuICAgIHR5cGU6IHN0cmluZztcbiAgICBsYWJlbD86IHN0cmluZztcbiAgICBwYXlsb2FkPzogc3RyaW5nO1xuICAgIHZhbHVlPzoge1xuICAgICAgICBvbkNsaWNrPzogc3RyaW5nO1xuICAgICAgICB0aXRsZT86IHN0cmluZztcbiAgICAgICAgZGlzcGxheWVkTWVzc2FnZTogc3RyaW5nO1xuICAgIH07XG59XG5cbmludGVyZmFjZSBPcGVuQ2hhdEJvdE1lZGlhIHtcbiAgICBzaG9ydERlc2M6IHN0cmluZztcbiAgICBsb25nRGVzYzogc3RyaW5nO1xuICAgIHRpdGxlOiBzdHJpbmc7XG4gICAgbWltZVR5cGU6IHN0cmluZztcbiAgICBzcmM6IHN0cmluZztcbiAgICByZXF1aXJlZF9hY3Rpb25zOiBPcGVuQ2hhdEJvdEFjdGlvbltdO1xuICAgIHN1Z2dlc3RlZF9hY3Rpb25zOiBPcGVuQ2hhdEJvdEFjdGlvbltdO1xuICAgIGRlZmF1bHRfYWN0aW9uczogT3BlbkNoYXRCb3RBY3Rpb247XG4gICAgYnV0dG9uczogT3BlbkNoYXRCb3RBY3Rpb25bXTtcbn1cblxuaW50ZXJmYWNlIFdpbGRDYXJkT2JqZWN0IHtcbiAgICBbaW5kZXg6IHN0cmluZ106IHN0cmluZztcbn1cblxuZXhwb3J0IGludGVyZmFjZSBPcGVuQ2hhdEJvdFJlc3BvbnNlIHtcbiAgICBxdWVyeT86IHN0cmluZztcbiAgICB1c2VySWQ/OiBzdHJpbmc7XG4gICAgdGltZXN0YW1wPzogbnVtYmVyO1xuICAgIHRleHQ/OiBzdHJpbmc7XG4gICAgaW5mb1VSTD86IHN0cmluZztcbiAgICBlY2hvPzogeyBzZXNzaW9uOiBzdHJpbmcgfTtcbiAgICBzY29yZT86IHsgdmFsdWU6IG51bWJlciB9O1xuICAgIGNoYW5uZWw/OiBPcGVuQ2hhdEJvdENoYW5uZWw7XG4gICAgbWVkaWFzPzogW09wZW5DaGF0Qm90TWVkaWFdO1xuICAgIGNvbnRleHQ/OiBXaWxkQ2FyZE9iamVjdFtdO1xuICAgIHN1Z2dlc3Rpb25zPzogT3BlbkNoYXRCb3RBY3Rpb25bXTtcbiAgICBlbmRPZlRvcGljPzogYm9vbGVhbjtcbn1cblxuaW50ZXJmYWNlIE9wZW5DaGF0Qm90TWV0YSB7XG4gICAgdmVyc2lvbjogbnVtYmVyO1xuICAgIGJvdEljb246IHN0cmluZztcbiAgICBib3ROYW1lOiBzdHJpbmc7XG4gICAgY29weXJpZ2h0OiBzdHJpbmc7XG4gICAgYXV0aG9yczogc3RyaW5nW107XG59XG5cbmludGVyZmFjZSBPcGVuQ2hhdEJvdFN0YXR1cyB7XG4gICAgY29kZTogKDIwMCB8IDQwMCk7XG4gICAgZXJyb3JUeXBlOiAoJ3N1Y2Nlc3MnIHwgJ0JhZCByZXF1ZXN0Jyk7XG59XG5cblxuZXhwb3J0IGludGVyZmFjZSBLb252ZXJzb0Fuc3dlciB7XG4gICAgcmVzcG9uc2U/OiBPcGVuQ2hhdEJvdFJlc3BvbnNlO1xuICAgIG1ldGE6IE9wZW5DaGF0Qm90TWV0YTtcbiAgICBzdGF0dXM6IE9wZW5DaGF0Qm90U3RhdHVzO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIFVzZXJJbnB1dCB7XG4gICAgbWVzc2FnZTogc3RyaW5nO1xuICAgIGRhdGU6IHN0cmluZztcbiAgICBlcnJvcj86IGJvb2xlYW47XG59XG4iXX0=