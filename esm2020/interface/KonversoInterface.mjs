/***********************************************************
 **  @project ngx-konverso                              **
 **  @file KonversoInterface                                         **
 **  @author Brice Daupiard <brice.daupiard@smartiiz.com>  **
 **  @Date 30/03/2021                                         **
 ***********************************************************/
export {};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiS29udmVyc29JbnRlcmZhY2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9rb252ZXJzby9zcmMvaW50ZXJmYWNlL0tvbnZlcnNvSW50ZXJmYWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs2REFLNkQiLCJzb3VyY2VzQ29udGVudCI6WyIvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcbiAqKiAgQHByb2plY3Qgbmd4LWtvbnZlcnNvICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKipcbiAqKiAgQGZpbGUgS29udmVyc29JbnRlcmZhY2UgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICoqXG4gKiogIEBhdXRob3IgQnJpY2UgRGF1cGlhcmQgPGJyaWNlLmRhdXBpYXJkQHNtYXJ0aWl6LmNvbT4gICoqXG4gKiogIEBEYXRlIDMwLzAzLzIwMjEgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICoqXG4gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG5cblxuaW50ZXJmYWNlIFdpbGRDYXJkT2JqZWN0QXJyYXkge1xuICAgIFtpbmRleDogc3RyaW5nXTogYW55W107IC8vIGtleSBzaG91bGQgYmUgbGFuZ3VhZ2Ugc2V0dGluZ1xufVxuXG4vKipcbiAqICBCb3QgSW5pdCBtZXNzYWdlXG4gKiAgQEZpcnN0VXNhZ2UgeyBlbiA6IFtcbiAqICAgICAgICAgICdIZWxsbyBpbSBCb3RtYW4gaSBjYW4gaGVscCB5b3UnLFxuICogICAgICAgICAgJ1lvdSBjYW4gYXNrIG1lIGFueXRoaW5nJyxcbiAqICAgICAgICAgICdGb3IgZXhhbXBsZSA6IEkgaGF2ZSBhIHByb2JsZW0gd2l0aCBteSBwbGFudHMnXG4gKiAgICAgICAgIF0sXG4gKiAgICBmciA6IFtcbiAqICAgICAgICAnQm9uam91ciBqZSBzdWlzIGJvdG1hbicsXG4gKiAgICAgICAgJ1R1IHBldXggbWUgZGVtYW5kZXIgY2UgcXVlIHR1IHZldXgnLFxuICogICAgICAgICdQYXIgZXhlbXBsZSA6IG1lcyBwbGFudGVzIG9udCB1biBwcm9ibMOobWUnXG4gKiAgICAgICAgXVxuICogIH07IEZpcnN0IG1lc3NhZ2UgKHR5cGUgc3RlcHBlcilcbiAqXG4gKiAgQFdlbGNvbWUgIHtcbiAqICAgICAgZW4gOiAnSGkgSmVhbiwgaW0gZ2xhZCB0byBzZWUgeW91LCB3aGF0IGNhbiBpIGRvIGZvciB5b3UgPycsXG4gKiAgICAgIGZyIDogJ0JvbmpvdXIsIHJhdmlzIGRlIHRlIHJldm9pciwgcXVlIHB1aXMtamUgZmFpcmUgcG91ciB0b2knXG4gKiAgICB9IFdlbGNvbWUgbWVzc2FnZSBzaW1wbGUgc3RyaW5nXG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgQm90SW5pdE1lc3NhZ2Uge1xuICAgIEZpcnN0VXNhZ2U/OiBXaWxkQ2FyZE9iamVjdEFycmF5O1xuICAgIFdlbGNvbWU/OiBXaWxkQ2FyZE9iamVjdDtcbn1cblxuXG5leHBvcnQgaW50ZXJmYWNlIENvbG9yU2V0IHtcbiAgICBQcmltYXJ5Pzogc3RyaW5nO1xuICAgIFNlY29uZGFyeT86IHN0cmluZztcbiAgICBEZWZhdWx0Pzogc3RyaW5nO1xufVxuXG4vKipcbiAqIERlZmF1bHQgQXNzZXRzXG4gKi9cblxuZXhwb3J0IGludGVyZmFjZSBEZWZhdWx0QXNzZXRzIHtcbiAgICBGdWxsU2l6ZUxvZ28/OiBzdHJpbmc7XG4gICAgU21hbGxTaXplTG9nbz86IHN0cmluZztcbiAgICBCYWNrZ3JvdW5kPzogc3RyaW5nO1xuICAgIENvbG9yU2V0PzogQ29sb3JTZXQ7XG59XG5cbi8qKlxuICogSW50ZXJmYWNlIHNldHRpbmcgZm9yUm9vdCBLb252ZXJzb1xuICovXG5leHBvcnQgaW50ZXJmYWNlIEtvbnZlcnNvSW50ZXJmYWNlIHtcbiAgICBlbmRwb2ludDogc3RyaW5nOyAgLy8gQXBpIEVudHJ5IGVuZHBvaW50IG9yIFByb3h5XG4gICAgZW5kcG9pbnRfcXJjb2RlPzogc3RyaW5nOyAvLyBlbmRwb2ludCBmb3IgYXR0YWNobWVudHMgcXIgY29kZVxuICAgIHRva2VuPzogc3RyaW5nOyAvLyBCZWFyZXIgdG9rZW5cbiAgICBhdXRoPzogYm9vbGVhbjsgLy8gV2lsbCBpbmplY3QgdXNlciBkYXRhIHRvIGJvdCBjb21wb25lbnQgb24gdXNlciBzaWduIGluXG4gICAgbGFuZz86IHN0cmluZzsgLy8gY3VycmVudGx5IGF2YWlsYWJsZSBsYW5ndWFnZSAoY2FuIGJlIHVwZGF0ZSksXG4gICAgQ3VzdG9tV2VsY29tZT86IGJvb2xlYW47XG4gICAgZGVmYXVsdEFzc2V0cz86IERlZmF1bHRBc3NldHM7XG4gICAgQm90SW5pdE1lc3NhZ2U/OiBCb3RJbml0TWVzc2FnZTtcbiAgICBBc3Npc3RhbnRNb2RlPzogYm9vbGVhbjtcbiAgICBJbnB1dFBsYWNlSG9sZGVyOiBXaWxkQ2FyZE9iamVjdEFycmF5O1xuICAgIElucHV0TnVtYmVyUGxhY2VIb2xkZXI6IFdpbGRDYXJkT2JqZWN0QXJyYXk7XG4gICAgQWZ0ZXJQcm9jZXNzOiBib29sZWFuO1xuICAgIEFmdGVyUHJvY2Vzc1NjZW5hcmlvOiBhbnk7XG4gICAgTW9kYWxBdHRhY2htZW50VGV4dD86IHtcbiAgICAgICAgZnI6IHtcbiAgICAgICAgICAgIFNFTkRfTUVfWU9VUl9BVFRBQ0hNRU5UUzogc3RyaW5nLFxuICAgICAgICAgICAgRFJPUF9QSE9UTzogc3RyaW5nLFxuICAgICAgICAgICAgSV9GSU5JU0hFRDogc3RyaW5nXG4gICAgICAgIH0sXG4gICAgICAgIGVuOiB7XG4gICAgICAgICAgICBTRU5EX01FX1lPVVJfQVRUQUNITUVOVFM6IHN0cmluZyxcbiAgICAgICAgICAgIERST1BfUEhPVE86IHN0cmluZyxcbiAgICAgICAgICAgIElfRklOSVNIRUQ6IHN0cmluZ1xuICAgICAgICB9XG4gICAgfSxcbn1cblxuLyoqXG4gKiAgSW50ZWZhY2Ugc2V0dGluZyBmb3IgYXV0aGVudGljYXRpb25cbiAqICBAdXNlcklkOiBzdHJpbmc7ICAvLyB1bmlxdWUgdXNlciBJRCAoYW55IHR5cGUgb2YgZm9ybWF0IGFjY2VwdGVkKVxuICogIEBsYW5nOiBzdHJpbmc7IC8vIDIgZGlnaXRzIGxhbmd1YWdlIHVzZWQgKGxpa2UgXCJmclwiLCBcImVuXCIsIGV0Yy4pXG4gKiAgQGxvY2F0aW9uPzogc3RyaW5nOyAvLyBzaW1wbGUgYWRkcmVzcyBzdHJpbmdcbiAqICBAZmlyc3RWaXNpdD86Ym9vbGVhbjsgLy8gZW5hYmxlIGZpcnN0IHZpc2l0ZSBtZXNzYWdlIGlmIGlzIHNldCB0byB0cnVlXG4gKiAgQFtpbmRleDogc3RyaW5nXTogc3RyaW5nOyAvLyBBbGwgb3RoZXIgc3R1ZmYgcHV0IGhlcmUgZm9yIGJvdCBrbm93bGVkZ2U7XG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgS29udmVyc29Vc2VyIHtcbiAgICB1c2VySWQ6IHN0cmluZztcbiAgICBsYW5nOiBzdHJpbmc7XG4gICAgbG9jYXRpb24/OiBzdHJpbmc7XG4gICAgZmlyc3RWaXNpdD86IGFueTtcblxuICAgIFtpbmRleDogc3RyaW5nXTogYW55O1xufVxuXG5cbi8qKlxuICogIEludGVmYWNlIFF1ZXJ5IEtvbnZlcnNvXG4gKi9cblxuZXhwb3J0IGludGVyZmFjZSBLb252ZXJzb1F1ZXJ5IHtcbiAgICB1c2VySWQ6IHN0cmluZztcbiAgICBsYW5nOiBzdHJpbmc7XG4gICAgcXVlcnk6IHN0cmluZztcbiAgICBpc1NlbmRpbmc6IHRydWU7XG5cbiAgICBbaW5kZXg6IHN0cmluZ106IGFueTtcbn1cblxuLyoqXG4gKiAgT3BlbkNoYXRCb3QgQW5zd2VyIEludGVyZmFjZXNcbiAqICBUaGlzIGZvbGxvd2luZyBpbnRlcmZhY2UgaXMgYmFzZWQgb24gaHR0cHM6Ly9vcGVuY2hhdGJvdC5pby9zd2FnZ2VyL3N3YWdnZXIuaHRtbCMvZGVmYXVsdC9hc2tfY2hhdGJvdFxuICovXG5pbnRlcmZhY2UgT3BlbkNoYXRCb3RDaGFubmVsUGF5bG9hZCB7XG4gICAgdHlwZTogKCdodG1sJyB8ICdwbGFpblRleHQnKTtcbiAgICBwYXlsb2FkOiBzdHJpbmc7XG59XG5cbmludGVyZmFjZSBPcGVuQ2hhdEJvdENoYW5uZWwge1xuICAgIG1hcmt1cDogT3BlbkNoYXRCb3RDaGFubmVsUGF5bG9hZDtcbiAgICBtZXNzYWdpbmc6IE9wZW5DaGF0Qm90Q2hhbm5lbFBheWxvYWQ7XG4gICAgc21zOiBPcGVuQ2hhdEJvdENoYW5uZWxQYXlsb2FkO1xuICAgIHR0czogT3BlbkNoYXRCb3RDaGFubmVsUGF5bG9hZDtcbn1cblxuaW50ZXJmYWNlIE9wZW5DaGF0Qm90QWN0aW9uIHtcbiAgICB0eXBlOiBzdHJpbmc7XG4gICAgbGFiZWw/OiBzdHJpbmc7XG4gICAgcGF5bG9hZD86IHN0cmluZztcbiAgICB2YWx1ZT86IHtcbiAgICAgICAgb25DbGljaz86IHN0cmluZztcbiAgICAgICAgdGl0bGU/OiBzdHJpbmc7XG4gICAgICAgIGRpc3BsYXllZE1lc3NhZ2U6IHN0cmluZztcbiAgICB9O1xufVxuXG5pbnRlcmZhY2UgT3BlbkNoYXRCb3RNZWRpYSB7XG4gICAgc2hvcnREZXNjOiBzdHJpbmc7XG4gICAgbG9uZ0Rlc2M6IHN0cmluZztcbiAgICB0aXRsZTogc3RyaW5nO1xuICAgIG1pbWVUeXBlOiBzdHJpbmc7XG4gICAgc3JjOiBzdHJpbmc7XG4gICAgcmVxdWlyZWRfYWN0aW9uczogT3BlbkNoYXRCb3RBY3Rpb25bXTtcbiAgICBzdWdnZXN0ZWRfYWN0aW9uczogT3BlbkNoYXRCb3RBY3Rpb25bXTtcbiAgICBkZWZhdWx0X2FjdGlvbnM6IE9wZW5DaGF0Qm90QWN0aW9uO1xuICAgIGJ1dHRvbnM6IE9wZW5DaGF0Qm90QWN0aW9uW107XG59XG5cbmludGVyZmFjZSBXaWxkQ2FyZE9iamVjdCB7XG4gICAgW2luZGV4OiBzdHJpbmddOiBzdHJpbmc7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgT3BlbkNoYXRCb3RSZXNwb25zZSB7XG4gICAgcXVlcnk/OiBzdHJpbmc7XG4gICAgdXNlcklkPzogc3RyaW5nO1xuICAgIHRpbWVzdGFtcD86IG51bWJlcjtcbiAgICB0ZXh0Pzogc3RyaW5nO1xuICAgIGluZm9VUkw/OiBzdHJpbmc7XG4gICAgZWNobz86IHsgc2Vzc2lvbjogc3RyaW5nIH07XG4gICAgc2NvcmU/OiB7IHZhbHVlOiBudW1iZXIgfTtcbiAgICBjaGFubmVsPzogT3BlbkNoYXRCb3RDaGFubmVsO1xuICAgIG1lZGlhcz86IFtPcGVuQ2hhdEJvdE1lZGlhXTtcbiAgICBjb250ZXh0PzogV2lsZENhcmRPYmplY3RbXTtcbiAgICBzdWdnZXN0aW9ucz86IE9wZW5DaGF0Qm90QWN0aW9uW107XG4gICAgZW5kT2ZUb3BpYz86IGJvb2xlYW47XG59XG5cbmludGVyZmFjZSBPcGVuQ2hhdEJvdE1ldGEge1xuICAgIHZlcnNpb246IG51bWJlcjtcbiAgICBib3RJY29uOiBzdHJpbmc7XG4gICAgYm90TmFtZTogc3RyaW5nO1xuICAgIGNvcHlyaWdodDogc3RyaW5nO1xuICAgIGF1dGhvcnM6IHN0cmluZ1tdO1xufVxuXG5pbnRlcmZhY2UgT3BlbkNoYXRCb3RTdGF0dXMge1xuICAgIGNvZGU6ICgyMDAgfCA0MDApO1xuICAgIGVycm9yVHlwZTogKCdzdWNjZXNzJyB8ICdCYWQgcmVxdWVzdCcpO1xufVxuXG5cbmV4cG9ydCBpbnRlcmZhY2UgS29udmVyc29BbnN3ZXIge1xuICAgIHJlc3BvbnNlPzogT3BlbkNoYXRCb3RSZXNwb25zZTtcbiAgICBtZXRhOiBPcGVuQ2hhdEJvdE1ldGE7XG4gICAgc3RhdHVzOiBPcGVuQ2hhdEJvdFN0YXR1cztcbn1cblxuZXhwb3J0IGludGVyZmFjZSBVc2VySW5wdXQge1xuICAgIG1lc3NhZ2U6IHN0cmluZztcbiAgICBkYXRlOiBzdHJpbmc7XG4gICAgZXJyb3I/OiBib29sZWFuO1xufVxuIl19